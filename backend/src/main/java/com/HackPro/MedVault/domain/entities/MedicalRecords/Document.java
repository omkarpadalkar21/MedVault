package com.HackPro.MedVault.domain.entities.MedicalRecords;

import com.HackPro.MedVault.domain.entities.UserManagement.Patient;
import jakarta.persistence.*;
import lombok.*;
import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.annotations.UpdateTimestamp;

import java.time.LocalDateTime;
import java.util.UUID;

@Entity
@Table(name = "documents")
@AllArgsConstructor
@NoArgsConstructor
@Setter
@Getter
@Builder
public class Document {

    @Id
    @GeneratedValue(strategy = GenerationType.UUID)
    private UUID id;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "patient_id", nullable = false)
    private Patient patient;

    @Column(nullable = false)
    private String title;

    @Column(nullable = false)
    private String fileUrl;  // Supabase public URL

    @Column(nullable = false)
    private String fileName;  // Original file path in Supabase

    private String category;  // Auto-filled by n8n

    private String documentType;  // Auto-filled by n8n

    @Column(length = 2000)
    private String summary;  // Generated by n8n AI

    @Column(columnDefinition = "TEXT")
    private String anomalies;  // JSON array of detected anomalies

    @Enumerated(EnumType.STRING)
    private ProcessingStatus processingStatus;  // PENDING, PROCESSING, COMPLETED, FAILED

    @CreationTimestamp
    private LocalDateTime createdAt;

    @UpdateTimestamp
    private LocalDateTime updatedAt;
}
